openapi: 3.0.3
info:
  title: Shop
  description: Shop
  version: 1.0.0
paths:
  /users/login:
    post:
      operationId: LoginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        200:
          description: seccessful operation
          headers:
            X-Expires-After:
              description: date in UTC when token expired
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid username/passwird supplied
          content:
            {}
  /user/logout:
    post:
      summary: Logs out current in user session
      operationId: logoutUser
      responses:
        200:
          description: successeful logout
          content:
            {}
  /items:
    get:
      summary: Lists Items with filters
      operationId: ListItems
      parameters:
        - name: price_min
          in: query
          description: Lower price limit
          required: false
          schema:
            type: integer
            format: int64
        - name: price_max
          in: query
          description: Upper price limit
          required: false
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        400:
          description: Invalid price range
          content: { }
    post:
      summary: Add a new item to the store
      operationId: CreateItem
      requestBody:
        description: Item object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      responses:
        "405":
          description: Invalid input
      security:
        - api_key:
            - write:items
            - read:items
      x-codegen-request-body-name: body
  /items/upload_image:
    post:
      summary: uploads an image
      operationId: uploadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                additionalMetadata:
                  type: string
                  description: Additional data to pass to server
                file:
                  type: string
                  description: file to upload
                  format: binary
      responses:
        200:
          description: successful operation
      security:
        - api_key: [ ]
  /items/{itemId}:
    get:
      summary: Find item by ID
      operationId: GetItem
      parameters:
        - name: itemId
          in: path
          description: ID of item to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        400:
          description: Invalid ID supplied
          content: { }
    put:
      summary: Updates a item in the store with form data
      operationId: UpdateItem
      parameters:
        - name: itemId
          in: path
          description: ID of item that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the item
                status:
                  type: string
                  description: Updated status of the item
      responses:
        405:
          description: Invalid input
          content: { }
      security:
        - api_key: [ ]
    delete:
      summary: Deletes a item
      operationId: DeleteItem
      parameters:
        - name: itemId
          in: path
          description: Item id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: { }
        404:
          description: Item not found
          content: { }
      security:
        - api_key: [ ]
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: integer # чтобы не потерять точность, денежные поля мы будем передавать
          format: int64 # в виде целочисленного значения минимальной размерности валюты (например, центы или копейки)
        image_link:
          type: string
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: X-API-KEY
